#!/bin/bash

source $LKP_SRC/lib/common.sh
source $LKP_SRC/lib/result.sh

shopt -s nullglob

is_rt()
{
	local path=$1
	local bn=$(basename $path)
	local dn=$(dirname $path)
	[[ $bn =~ ^[0-9]{1,5}$ ]] &&
		[[ -f $path/job.yaml ]] &&
		[[ -f $dn/stddev.json ]]
}

check_rt()
{
	local path=${1%%/}
	local dn=$(dirname $path)
	grep -q $path/stats.json $dn/matrix.json
}

remove_index()
{
	local path
	for path; do
		path=$(abs_path $path)
		[[ -d "$path" ]] || {
			echo "The path does not exist: $path" >&2
			exit 1
		}
		cleanup_path_record_from_result_root "$path"
	done
}

remove_paths()
{
	local path
	for path; do
		path=$(abs_path $path)
		[[ -d "$path" ]] || {
			echo "The path does not exist: $path" >&2
			exit 1
		}
		echo rm -fr "$path"
	done
}

remove_from_mrtts()
{
	local path
	local dir
	for path; do
		path=$(abs_path $path)
		for dir in $(find $path -type d); do
			is_mrt $dir && echo $dir
		done | lkp delete_mrts
	done
}

revert_unite_rt()
{
	local path
	for path; do
		is_rt $path && check_rt $path &&
			lkp reprocess -d $path
	done
	for path; do
		while is_rt $path && check_rt $path; do
			sleep 10
		done
	done
}

usage()
{
	cat >&2 <<-EOF
Usage:
	lkp $script_name <paths>
Example:
	lkp $script_name /result/xfstests/4HDD-ext4-ext4/lkp-ws02/debian-x86_64-2015-02-07.cgz/x86_64-rhel/gcc-4.9/v4.3/0/
EOF
	exit 1
}

script_name=$(basename $0)
[[ $# = 0 ]] && usage

echo "The command to remove the result path are:"
remove_paths "$@"

echo -n "!!! Do you really want to do that? [No/yes]: "
read answer
if [[ $answer = "yes" ]]; then
	revert_unite_rt "$@"
	remove_from_mrtts "$@"
	remove_index "$@"
	remove_paths "$@" | bash
fi
