#!/bin/bash

shopt -s nullglob

is_rt()
{
	local path=$1
	local bn=$(basename $path)
	local dn=$(dirname $path)
	[[ $bn =~ ^[0-9]{1,5}$ ]] &&
		[[ -f $path/job.yaml ]] &&
		[[ -f $dn/stddev.json ]]
}

check_rt()
{
	local path=${1%%/}
	local dn=$(dirname $path)
	grep -q $path/stats.json $dn/matrix.json
}

remove_ready()
{
	local result_root=$1
	local patterns=

	remove_flag=0  #0: remove RESULT_ROOT  1: remove _RESULT_ROOT
	paths=


	if [[ -d "$result_root" ]]; then
		is_rt "$result_root" && paths="$result_root" || usage >&2
	else

		patterns="$@"

		case $script_name in
		rm)
			paths=$($LKP_SRC/lkp-exec/rt "$patterns")
			;;
		_rm)
			paths=$($LKP_SRC/lkp-exec/_rt "$patterns")
			remove_flag=1
			;;
		esac

		[[ "$paths" ]] ||
		{
			echo "Can not find result root match the patterns: $patterns" 1>&2
			usage >&2
		}

	fi

	echo "$paths"
}

remove()
{
	local path
	local options
	local file_name

	for path in $paths; do
		options="$options -e /${path//\//\\/}/d"
	done

	# to avoid sed crash
	for file_name in /lkp/paths/????-??-??-*; do
		sed -i "$options" $file_name
	done

	echo "$paths" | xargs rm -fr
}

is_mrt()
{
	local dir=$1
	local -a jobs
	local -a matrix
	matrix=( $dir/matrix.json* )
	[ ${#matrix} -eq 0 ] && return 1
	jobs=( $dir/[0-9]*/job.yaml )
	[ ${#jobs} -ge 1 ]
}

remove_from_mrtts()
{
	[[ "$remove_flag" = "1" ]] && return

	local path
	local _path
	local _paths

	for path in $paths; do
		_paths="$_paths\n$(dirname $path)"
	done

	_paths=$(echo -e "$_paths" | sort | uniq)

	for _path in $_paths; do
		is_mrt $_path && echo $_path
	done | lkp delete_mrts
}

revert_unite_rt()
{
	[[ "$remove_flag" = "1" ]] && return

	local path
	for path in $paths; do
		is_rt $path && check_rt $path &&
			lkp reprocess -d $path
	done
	for path in $paths; do
		while is_rt $path && check_rt $path; do
			sleep 10
		done
	done
}

usage()
{
	cat <<-EOF
Usage: lkp $script_name <result_root> | < pattern1 [pattern2] ...>
For example:
lkp rm /result/xfstests/4HDD-ext4-ext4/lkp-ws02/debian-x86_64-2015-02-07.cgz/x86_64-rhel/gcc-4.9/v4.3/0/
lkp rm /xfstests/ /v4.3/
EOF
	exit 1
}

script_name=$(basename $0)
[[ $# = 0 ]] && usage >&2

echo "The command to remove the result path are:"
remove_ready "$@" | less
echo -n "!!! Do you really want to do that? [No/yes]: "
read answer
if [[ $answer = "yes" ]]; then
	revert_unite_rt
	remove_from_mrtts
	remove
fi
