#!/bin/bash

is_mrt()
{
    local dir=$1
    local -a jobs
    local -a matrix
    matrix=( $dir/matrix.json* )
    [ ${#matrix} -eq 0 ] && return 1
    jobs=( $dir/[0-9]*/job.yaml )
    [ ${#jobs} -ge 1 ]
}

remove_from_mrtts()
{
    local dir=$1
    is_mrt $dir && echo $dir | lkp delete_mrts
}

remove()
{
	local pattern
	local cmd
	local file
	local flag_pattern=0
	local tmp_file=$(mktemp)

	for pattern in $patterns
	do
		if [[ "$flag_pattern" = "0" ]]; then
			cmd="/${pattern//\//\\/}/"
			flag_pattern=1
		else
			cmd="$cmd && /${pattern//\//\\/}/"
		fi
	done

	for file in $(grep -l "$pattern" /lkp/paths/????-??-??-*)
	do
		if awk "$cmd {next}; {print}" $file > $tmp_file; then
			mv -f $tmp_file $file
		else
			rm -f $tmp_file
			echo "awk command have an error occurs: awk $cmd {next}; {print} $file" >&2
			exit 1
		fi
	done

	cat $temp_file | xargs rm -rf
}

usage()
{
	cat >&2 <<-EOF
Usage: lkp $script_name <patterns>
For example:
lkp $script_name /xfstests/ /lkp-ws02/ /v4.3/
EOF
	exit 1
}

script_name=$(basename $0)
[[ $# = 0 ]] && usage

patterns="$*"

echo "The command to remove the _result_root are:" >&2
echo "awk $patterns /lkp/paths/????-??-??-*"

temp_file=$(mktemp)
lkp _rt $patterns > $temp_file

[[ -s "$temp_file" ]] ||
{
	rm -f $temp_file
	echo "Cannot find the match path according to the patterns: $patterns" >&2
	exit 1
}

sleep 1
more $temp_file

echo -n "!!! Do you really want to do that? [No/yes]: "
read answer
if [[ $answer = "yes" ]]; then

	while read path
	do
		remove_from_mrtts $path
	done < $temp_file

	remove

	echo "Done" >&2
fi

rm -f $temp_file

