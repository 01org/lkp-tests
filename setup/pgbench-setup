#!/bin/sh
# - scale_factor
# - runtime
# - nr_task
# - transcations
# - worker_threads
# - latency_limit

postgres_run()
{
	sudo -u postgres "$@"
}

init_postgresql()
{
	grep -q postgres /etc/passwd && return

	adduser --quiet --home /var/lib/postgresql --no-create-home postgres \
		--system --disabled-password
	data_dir=/var/lib/postgresql/data
	mkdir -p "$data_dir"
	chown postgres "$data_dir"
	postgres_run /usr/lib/postgresql/*/bin/initdb  -D "$data_dir"
	run_dir=/var/run/postgresql
	mkdir -p "$run_dir"
	chown postgres "$run_dir"
	postgres_run /usr/lib/postgresql/*/bin/pg_ctl -D "$data_dir" start
}

[ -n "$scale_factor" ] && init_opts="-s $scale_factor"

init_postgresql

postgres_run dropdb pgbench_test > /dev/null 2>&1
postgres_run createdb pgbench_test
postgres_run pgbench -i $init_opts

if [ -n "$runtime" ]; then
	run_opts="-T $runtime"
elif [ -n "$transcations" ]; then
	run_opts="-t $transcations"
else
	run_opts="-T 300"
fi

[ -n "$nr_task" ] && run_opts="$run_opts -c $nr_task"
[ -n "$worker_threads" ] && run_opts="$run_opts -j $worker_threads"
[ -n "$latency_limit" ] && run_opts="$run_opts -L $latency_limit"

cat > "$TMP_RESULT_ROOT"/run.pgbench <<EOF
sudo -u postgres pgbench -n $run_opts
EOF
