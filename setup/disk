#!/bin/bash
# - nr_ssd
# - nr_hdd
# - nr_brd
# - nr_srd

# the hosts config may either
# - hard code    xxx_partitions; leave nr_xxx_partitions empty
# - hard code nr_xxx_partitions; make     xxx_partitions a shell glob to be expanded in test box


source $LKP_SRC/lib/unit.sh

max_ssd=$(echo $ssd_partitions | wc -w)
max_hdd=$(echo $hdd_partitions | wc -w)

check_nr_partitions()
{
	[[ $nr_ssd_partitions && $nr_ssd_partitions != $max_ssd ]] && {
		echo "disk number $nr_ssd_partitions mismatch with $max_ssd real disks: $ssd_partitions" >&2
		exit 1
	}

	[[ $nr_hdd_partitions && $nr_hdd_partitions != $max_hdd ]] && {
		echo "disk number $nr_hdd_partitions mismatch with $max_hdd real disks: $hdd_partitions" >&2
		exit 1
	}
}
check_nr_partitions

((nr_ssd > max_ssd)) && nr_ssd=$max_ssd
((nr_hdd > max_hdd)) && nr_hdd=$max_hdd

if (( nr_hdd )); then
	nr_partitions=$nr_hdd
	partitions="$hdd_partitions"
	disk_description=${nr_hdd}hdd
elif (( nr_brd )); then
	[[ $ramdisk_size ]] || ramdisk_size="1G"
	modprobe -r brd
	modprobe brd rd_nr=$nr_brd rd_size=$(to_kb $ramdisk_size)
	partitions=$(ls /dev/ram*)
	nr_partitions=$nr_brd
	disk_description=${nr_brd}brd
	disks=$partitions
elif (( nr_srd )); then
	[[ $ramdisk_size ]] || ramdisk_size="1G"
	modprobe -r scsi_debug
	modprobe scsi_debug add_host=1 num_tgts=$nr_srd max_luns=1 dev_size_mb=$(to_mb $ramdisk_size)
	partitions=$(grep -l -e scsi_debug /sys/block/*/device/model | awk -F'/' '{print "/dev/"$4}')
	nr_partitions=$nr_srd
	disk_description=${nr_srd}srd
	disks=$partitions
else
	nr_partitions=$nr_ssd
	partitions="$ssd_partitions"
	disk_description=${nr_ssd}ssd
fi

partitions=$(echo $partitions | cut -f1-$nr_partitions -d' ')
[[ $disks ]] || disks=$(echo $partitions | grep -o '[/a-z]\+' | sort -u | tr '\n' ' ')

cat >> $TMP/env.yaml <<EOF

# setup/disk
nr_partitions: $nr_partitions
partitions: $partitions
disk_description: $disk_description
disks: $disks
EOF
