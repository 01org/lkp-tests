#!/bin/bash

# check if testbox has enough memory to run the job

source $LKP_SRC/lib/unit.sh


[[ -n "$boot_params_bp_memmap" ]] && {
	reserve_memory=$(echo $boot_params_bp_memmap | awk -F '!' '{print $1}' | awk -F 'G' '{print $1}')
	start_memory=$(echo $boot_params_bp_memmap | awk -F '!' '{print $2}' | awk -F 'G' '{print $1}')
	boot_need_memory=$(( reserve_memory + start_memory ))
	memory_gb=$(to_gb $memory)
	if (( boot_need_memory > memory_gb )); then
		echo "rm $job_file due to not enough memory"
		echo "need: $boot_need_memory G, has: $memory_gb G"
		exit 1
	fi
}

# if need_memory=100% and nr_cpu is 64
# it means it needs 64G memory at least
[[ $need_memory =~ %$ ]] && {
	[[ -n "$nr_cpu" && $nr_cpu -ge 1 ]] || {
		echo "nr_cpu is not correct at hosts/$testbox"
		exit 1
	}

	ratio=${need_memory%\%*}
	need_memory=$((nr_cpu * ratio / 100))G
}

# check if testbox has enough memory to boot with specified rootfs and kconfig

initrd_need_memory=0

# size of rootfs debian-x86_64-2018-04-03 is near 300M
[[ "$rootfs" =~ ^debian-x86_64 ]] && initrd_need_memory=300

# for modules.cgz, modules size of x86_64-rhel-7.2 is near 700M
[[ "$kconfig" =~ ^x86_64-rhel ]] && initrd_need_memory=$((initrd_need_memory + 700))

runtime_need_memory=$(to_mb $need_memory)
total_need_memory=$((runtime_need_memory + initrd_need_memory))
memory_mb=$(to_mb $memory)

if (( total_need_memory > memory_mb )); then
	echo "rm $job_file due to not enough memory"
	echo "need: $total_need_memory MB, has: $memory_mb MB"
	exit 1
fi

exit 0
