From 0acb5d107ce4cf43356ed3159260de9f2f845874 Mon Sep 17 00:00:00 2001
From: Xiao Yang <xiaox.yang@intel.com>
Date: Fri, 29 Nov 2019 10:25:29 +0800
Subject: [PATCH] tcp: Add a missing PSH flag for sending operations in some
 testcases

Kernel commit 051ba67447de1("tcp: force a PSH flag on TSO packets") makes
TCP add a PSH flag on packet compulsively when sending a TSO packet, so we
need to update some tcp testcases.

Signed-off-by: Xiao Yang <xiaox.yang@intel.com>
---
 gtests/net/tcp/eor/no-coalesce-large.pkt                       | 2 +-
 gtests/net/tcp/eor/no-coalesce-retrans.pkt                     | 2 +-
 gtests/net/tcp/eor/no-coalesce-small.pkt                       | 2 +-
 gtests/net/tcp/eor/no-coalesce-subsequent.pkt                  | 2 +-
 gtests/net/tcp/epoll/epoll_out_edge.pkt                        | 8 ++++----
 gtests/net/tcp/epoll/epoll_out_edge_default_notsent_lowat.pkt  | 8 ++++----
 gtests/net/tcp/epoll/epoll_out_edge_notsent_lowat.pkt          | 4 ++--
 gtests/net/tcp/limited_transmit/limited-transmit-no-sack.pkt   | 4 ++--
 gtests/net/tcp/limited_transmit/limited-transmit-sack.pkt      | 4 ++--
 gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-client.pkt        | 2 +-
 gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-server.pkt        | 2 +-
 gtests/net/tcp/mtu_probe/basic-v4.pkt                          | 2 +-
 gtests/net/tcp/mtu_probe/basic-v6.pkt                          | 2 +-
 gtests/net/tcp/nagle/https_client.pkt                          | 2 +-
 gtests/net/tcp/notsent_lowat/notsent-lowat-default.pkt         | 2 +-
 gtests/net/tcp/notsent_lowat/notsent-lowat-setsockopt.pkt      | 8 ++++----
 gtests/net/tcp/notsent_lowat/notsent-lowat-sysctl.pkt          | 8 ++++----
 gtests/net/tcp/sack/sack-route-refresh-ip-tos.pkt              | 2 +-
 gtests/net/tcp/shutdown/shutdown-rdwr-send-queue-ack-close.pkt | 4 ++--
 gtests/net/tcp/timestamping/client-only-last-byte.pkt          | 2 +-
 20 files changed, 36 insertions(+), 36 deletions(-)

diff --git a/gtests/net/tcp/eor/no-coalesce-large.pkt b/gtests/net/tcp/eor/no-coalesce-large.pkt
index 0c3823b..91169a3 100644
--- a/gtests/net/tcp/eor/no-coalesce-large.pkt
+++ b/gtests/net/tcp/eor/no-coalesce-large.pkt
@@ -27,7 +27,7 @@
 // the previous chunk.
    +0 write(4, ..., 2000) = 2000
 
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 +.001 < .  1:1(0) ack 10001 win 514
 // Now we have enough room to send out the 2 x 400B packets out.
    +0 > P. 10001:20801(10800) ack 1
diff --git a/gtests/net/tcp/eor/no-coalesce-retrans.pkt b/gtests/net/tcp/eor/no-coalesce-retrans.pkt
index b801492..54704b7 100644
--- a/gtests/net/tcp/eor/no-coalesce-retrans.pkt
+++ b/gtests/net/tcp/eor/no-coalesce-retrans.pkt
@@ -34,7 +34,7 @@
 // This chunk should not be appended to the skbs created for the previous chunk.
    +0 write(4, ..., 10000) = 10000
 
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 +.001 < .  1:1(0) ack 10001 win 514
 // Now we have enough room to send out the 2 x 400B packets out.
    +0 > P. 10001:10801(800) ack 1
diff --git a/gtests/net/tcp/eor/no-coalesce-small.pkt b/gtests/net/tcp/eor/no-coalesce-small.pkt
index cef980d..fb49927 100644
--- a/gtests/net/tcp/eor/no-coalesce-small.pkt
+++ b/gtests/net/tcp/eor/no-coalesce-small.pkt
@@ -25,7 +25,7 @@
 // This chunk should not be appended to the skbs created for the previous chunk.
    +0 write(4, ..., 10000) = 10000
 
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 +.001 < .  1:1(0) ack 10001 win 514
 // Now we have enough room to send out the 2 x 400B packets out.
    +0 > P. 10001:10801(800) ack 1
diff --git a/gtests/net/tcp/eor/no-coalesce-subsequent.pkt b/gtests/net/tcp/eor/no-coalesce-subsequent.pkt
index 526347c..43822fd 100644
--- a/gtests/net/tcp/eor/no-coalesce-subsequent.pkt
+++ b/gtests/net/tcp/eor/no-coalesce-subsequent.pkt
@@ -34,7 +34,7 @@
 // This chunk should not be appended to the skbs created for the previous chunk.
    +0 write(4, ..., 10000) = 10000
 
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 +.001 < .  1:1(0) ack 10001 win 514
 // Now we have enough room to send out the 2 x 400B packets out.
    +0 > P. 10001:10801(800) ack 1
diff --git a/gtests/net/tcp/epoll/epoll_out_edge.pkt b/gtests/net/tcp/epoll/epoll_out_edge.pkt
index b4ddf9a..63431fd 100644
--- a/gtests/net/tcp/epoll/epoll_out_edge.pkt
+++ b/gtests/net/tcp/epoll/epoll_out_edge.pkt
@@ -35,7 +35,7 @@
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
 
    // The ack does not open up enough space to send EPOLLOUT to the user.
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
    +0 < . 1:1(0) ack 10001 win 257
    +0 > P. 10001:26001(16000) ack 1
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
@@ -52,19 +52,19 @@
 
    // The ack opens enough space to send EPOLLOUT to the user.
    +0 < . 1:1(0) ack 42001 win 257
-   +0 > . 42001:74001(32000) ack 1
+   +0 > P. 42001:74001(32000) ack 1
    +0 epoll_wait(5, {events=EPOLLOUT, fd=4}, 1, 0) = 1
 
    // The ack opens more space, but EPOLLET prevents a second EPOLLOUT.
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
    +0 < . 1:1(0) ack 74001 win 257
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
-   +0 > . 74001:106001(32000) ack 1
+   +0 > P. 74001:106001(32000) ack 1
 
    // Another partial write.
    +0 write(4, ..., 180000) = 112000
 
    // This ack opens more space, so we send EPOLLOUT.
    +0 < . 1:1(0) ack 106001 win 257
-   +0 > . 106001:138001(32000) ack 1
+   +0 > P. 106001:138001(32000) ack 1
    +0 epoll_wait(5, {events=EPOLLOUT, fd=4}, 1, 0) = 1
diff --git a/gtests/net/tcp/epoll/epoll_out_edge_default_notsent_lowat.pkt b/gtests/net/tcp/epoll/epoll_out_edge_default_notsent_lowat.pkt
index bcad143..6714505 100644
--- a/gtests/net/tcp/epoll/epoll_out_edge_default_notsent_lowat.pkt
+++ b/gtests/net/tcp/epoll/epoll_out_edge_default_notsent_lowat.pkt
@@ -36,7 +36,7 @@
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
 
    // The ack does not open up enough space to send EPOLLOUT to the user.
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
    +0 < . 1:1(0) ack 10001 win 257
    +0 > P. 10001:26001(16000) ack 1
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
@@ -53,19 +53,19 @@
 
    // The ack opens enough space to send EPOLLOUT to the user.
    +0 < . 1:1(0) ack 42001 win 257
-   +0 > . 42001:74001(32000) ack 1
+   +0 > P. 42001:74001(32000) ack 1
    +0 epoll_wait(5, {events=EPOLLOUT, fd=4}, 1, 0) = 1
 
    // The ack opens more space, but EPOLLET prevents a second EPOLLOUT.
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
    +0 < . 1:1(0) ack 74001 win 257
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
-   +0 > . 74001:106001(32000) ack 1
+   +0 > P. 74001:106001(32000) ack 1
 
    // Another partial write.
    +0 write(4, ..., 180000) = 112000
 
    // This ack opens more space, so we send EPOLLOUT.
    +0 < . 1:1(0) ack 106001 win 257
-   +0 > . 106001:138001(32000) ack 1
+   +0 > P. 106001:138001(32000) ack 1
    +0 epoll_wait(5, {events=EPOLLOUT, fd=4}, 1, 0) = 1
diff --git a/gtests/net/tcp/epoll/epoll_out_edge_notsent_lowat.pkt b/gtests/net/tcp/epoll/epoll_out_edge_notsent_lowat.pkt
index 84603e0..17309fe 100644
--- a/gtests/net/tcp/epoll/epoll_out_edge_notsent_lowat.pkt
+++ b/gtests/net/tcp/epoll/epoll_out_edge_notsent_lowat.pkt
@@ -35,7 +35,7 @@
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
 
    // The ack does not open up enough space to send EPOLLOUT to the user.
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
    +0 < . 1:1(0) ack 10001 win 257
    +0 > P. 10001:26001(16000) ack 1
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
@@ -66,7 +66,7 @@
    +0 write(4, ..., 180000) = 48000
 
    +0 < . 1:1(0) ack 90001 win 257
-   +0 > . 90001:106001(16000) ack 1
+   +0 > P. 90001:106001(16000) ack 1
    +0 epoll_wait(5, {events=0, ptr=0}, 1, 0) = 0
    // This ack opens more space, so we send EPOLLOUT.
    +0 < . 1:1(0) ack 106001 win 257
diff --git a/gtests/net/tcp/limited_transmit/limited-transmit-no-sack.pkt b/gtests/net/tcp/limited_transmit/limited-transmit-no-sack.pkt
index d43450e..79a814f 100644
--- a/gtests/net/tcp/limited_transmit/limited-transmit-no-sack.pkt
+++ b/gtests/net/tcp/limited_transmit/limited-transmit-no-sack.pkt
@@ -18,7 +18,7 @@
 
 // Write some data, and send the initial congestion window.
    +0 write(4, ..., 15000) = 15000
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 
 // Limited transmit: on first dupack, send a new data segment.
  +.11 < . 1:1(0) ack 1 win 320
@@ -33,7 +33,7 @@
 // So we revert state back to Open. Slow start cwnd from 10 to 11
 // and send 11 - 9 = 2 packets
  +.01 < . 1:1(0) ack 3001 win 320
-   +0 > . 12001:14001(2000) ack 1
+   +0 > P. 12001:14001(2000) ack 1
 
  +.02 < . 1:1(0) ack 5001 win 320
    +0 > P. 14001:15001(1000) ack 1
diff --git a/gtests/net/tcp/limited_transmit/limited-transmit-sack.pkt b/gtests/net/tcp/limited_transmit/limited-transmit-sack.pkt
index 9c6edaa..4b13523 100644
--- a/gtests/net/tcp/limited_transmit/limited-transmit-sack.pkt
+++ b/gtests/net/tcp/limited_transmit/limited-transmit-sack.pkt
@@ -18,7 +18,7 @@
 
 // Write some data, and send the initial congestion window.
    +0 write(4, ..., 15000) = 15000
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 
 // Limited transmit: on first dupack, send a new data segment.
  +.11 < . 1:1(0) ack 1 win 320 <sack 1001:2001,nop,nop>
@@ -30,7 +30,7 @@
 
 // It turned out to be reordering, not loss.
  +.01 < . 1:1(0) ack 3001 win 320
-   +0 > . 12001:14001(2000) ack 1
+   +0 > P. 12001:14001(2000) ack 1
 
  +.02 < . 1:1(0) ack 5001 win 320
    +0 > P. 14001:15001(1000) ack 1
diff --git a/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-client.pkt b/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-client.pkt
index 03b782e..30f1c30 100644
--- a/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-client.pkt
+++ b/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-client.pkt
@@ -22,4 +22,4 @@
 
 // IW10 MSS should yield outgoing TSO packet with 10*1100 == 11000 bytes:
   +.1 write(3, ..., 12000) = 12000
-   +0 > . 1:11001(11000) ack 1
+   +0 > P. 1:11001(11000) ack 1
diff --git a/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-server.pkt b/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-server.pkt
index e01cb60..1d0504b 100644
--- a/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-server.pkt
+++ b/gtests/net/tcp/mss/mss-setsockopt-tcp_maxseg-server.pkt
@@ -25,4 +25,4 @@
 
 // IW10 MSS should yield outgoing TSO packet with 10*1100 == 11000 bytes:
   +.1 write(4, ..., 12000) = 12000
-   +0 > . 1:11001(11000) ack 1
+   +0 > P. 1:11001(11000) ack 1
diff --git a/gtests/net/tcp/mtu_probe/basic-v4.pkt b/gtests/net/tcp/mtu_probe/basic-v4.pkt
index 3c7d363..445e5af 100644
--- a/gtests/net/tcp/mtu_probe/basic-v4.pkt
+++ b/gtests/net/tcp/mtu_probe/basic-v4.pkt
@@ -41,7 +41,7 @@
    +0 > .  1587:2187(600) ack 1
    +0 > .  2187:2787(600) ack 1
    +0 > .  2787:3387(600) ack 1
-   +0 > .  3387:3987(600) ack 1
+   +0 > P.  3387:3987(600) ack 1
    +0 > P. 3987:4001(14) ack 1
    +0 < .  1:1(0) ack 4001 win 50000
 
diff --git a/gtests/net/tcp/mtu_probe/basic-v6.pkt b/gtests/net/tcp/mtu_probe/basic-v6.pkt
index 3a4b4b4..ef310b3 100644
--- a/gtests/net/tcp/mtu_probe/basic-v6.pkt
+++ b/gtests/net/tcp/mtu_probe/basic-v6.pkt
@@ -44,7 +44,7 @@
    +0 > .  1587:2187(600) ack 1
    +0 > .  2187:2787(600) ack 1
    +0 > .  2787:3387(600) ack 1
-   +0 > .  3387:3987(600) ack 1
+   +0 > P.  3387:3987(600) ack 1
    +0 > P. 3987:4001(14) ack 1
    +0 < .  1:1(0) ack 4001 win 50000
 
diff --git a/gtests/net/tcp/nagle/https_client.pkt b/gtests/net/tcp/nagle/https_client.pkt
index 3ff4321..3f56dd7 100644
--- a/gtests/net/tcp/nagle/https_client.pkt
+++ b/gtests/net/tcp/nagle/https_client.pkt
@@ -29,7 +29,7 @@ ethtool -K tun0 tso off gso off
    +0 > P. 518:569(51) ack 144
  +.03 write(4, ..., 2002) = 2002
    +0 > . 569:1543(974) ack 144
-   +0 > . 1543:2517(974) ack 144
+   +0 > P. 1543:2517(974) ack 144
 // Without disabling Nagle, this packet will not happen until the remote ACK.
    +0 > P. 2517:2571(54) ack 144
 
diff --git a/gtests/net/tcp/notsent_lowat/notsent-lowat-default.pkt b/gtests/net/tcp/notsent_lowat/notsent-lowat-default.pkt
index 4b706db..65a5572 100644
--- a/gtests/net/tcp/notsent_lowat/notsent-lowat-default.pkt
+++ b/gtests/net/tcp/notsent_lowat/notsent-lowat-default.pkt
@@ -23,7 +23,7 @@
    +0 fcntl(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
 
    +0 write(4, ..., 59000) = 58000
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
  +.02 < . 1:1(0) ack 10001 win 257
    +0 > P. 10001:26001(16000) ack 1
 
diff --git a/gtests/net/tcp/notsent_lowat/notsent-lowat-setsockopt.pkt b/gtests/net/tcp/notsent_lowat/notsent-lowat-setsockopt.pkt
index 92ec0ad..24128d2 100644
--- a/gtests/net/tcp/notsent_lowat/notsent-lowat-setsockopt.pkt
+++ b/gtests/net/tcp/notsent_lowat/notsent-lowat-setsockopt.pkt
@@ -22,7 +22,7 @@
    +0 fcntl(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
 
    +0 write(4, ..., 59000) = 26000
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 
 // Verify that we get a POLLOUT at the right time.
    +0...0.040 poll([{fd=4,
@@ -30,13 +30,13 @@
              revents=POLLOUT}], 1, 1000) = 1
 
  +.01 < . 1:1(0) ack 2001 win 257
-   +0 > . 10001:14001(4000) ack 1
+   +0 > P. 10001:14001(4000) ack 1
 
  +.01 < . 1:1(0) ack 4001 win 257
-   +0 > . 14001:18001(4000) ack 1
+   +0 > P. 14001:18001(4000) ack 1
 
  +.01 < . 1:1(0) ack 6001 win 257
-   +0 > . 18001:22001(4000) ack 1
+   +0 > P. 18001:22001(4000) ack 1
 
  +.01 < . 1:1(0) ack 8001 win 257
    +0 > P. 22001:26001(4000) ack 1
diff --git a/gtests/net/tcp/notsent_lowat/notsent-lowat-sysctl.pkt b/gtests/net/tcp/notsent_lowat/notsent-lowat-sysctl.pkt
index f96be4f..39b0196 100644
--- a/gtests/net/tcp/notsent_lowat/notsent-lowat-sysctl.pkt
+++ b/gtests/net/tcp/notsent_lowat/notsent-lowat-sysctl.pkt
@@ -23,7 +23,7 @@ sysctl -q net.ipv4.tcp_notsent_lowat=4000`
    +0 fcntl(4, F_SETFL, O_RDWR|O_NONBLOCK) = 0
 
    +0 write(4, ..., 59000) = 26000
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 
 // Verify that we get a POLLOUT at the right time.
    +0...0.040 poll([{fd=4,
@@ -31,13 +31,13 @@ sysctl -q net.ipv4.tcp_notsent_lowat=4000`
              revents=POLLOUT}], 1, 1000) = 1
 
  +.01 < . 1:1(0) ack 2001 win 257
-   +0 > . 10001:14001(4000) ack 1
+   +0 > P. 10001:14001(4000) ack 1
 
  +.01 < . 1:1(0) ack 4001 win 257
-   +0 > . 14001:18001(4000) ack 1
+   +0 > P. 14001:18001(4000) ack 1
 
  +.01 < . 1:1(0) ack 6001 win 257
-   +0 > . 18001:22001(4000) ack 1
+   +0 > P. 18001:22001(4000) ack 1
 
  +.01 < . 1:1(0) ack 8001 win 257
    +0 > P. 22001:26001(4000) ack 1
diff --git a/gtests/net/tcp/sack/sack-route-refresh-ip-tos.pkt b/gtests/net/tcp/sack/sack-route-refresh-ip-tos.pkt
index cdcf2a7..5ea032d 100644
--- a/gtests/net/tcp/sack/sack-route-refresh-ip-tos.pkt
+++ b/gtests/net/tcp/sack/sack-route-refresh-ip-tos.pkt
@@ -32,5 +32,5 @@
 // Verify that we do not retransmit the SACKed segments.
  +.01 < . 1:1(0) ack 13141 win 65535 <sack 16061:17521 20441:26281,nop,nop>
    +0 > . 13141:16061(2920) ack 1
-   +0 > . 17521:20441(2920) ack 1
+   +0 > P. 17521:20441(2920) ack 1
  +.01 < . 1:1(0) ack 26281 win 65535
diff --git a/gtests/net/tcp/shutdown/shutdown-rdwr-send-queue-ack-close.pkt b/gtests/net/tcp/shutdown/shutdown-rdwr-send-queue-ack-close.pkt
index c3bdc58..9f7fa2f 100644
--- a/gtests/net/tcp/shutdown/shutdown-rdwr-send-queue-ack-close.pkt
+++ b/gtests/net/tcp/shutdown/shutdown-rdwr-send-queue-ack-close.pkt
@@ -19,7 +19,7 @@
    +0 accept(3, ..., ...) = 4
 
  +.01 write(4, ..., 20000) = 20000
-   +0 > . 1:10001(10000) ack 1
+   +0 > P. 1:10001(10000) ack 1
 
 // Shutdown SHUT_RDDWR enqueues a FIN, but we don't have
 // cwnd to send it.
@@ -27,7 +27,7 @@
 
 // Receive an ACK and send more data in slow start.
 +.001 < . 1:1(0) ack 1001 win 257
-   +0 > . 10001:12001(2000) ack 1
+   +0 > P. 10001:12001(2000) ack 1
 
 // TLP after 2*RTT + min_rto
 +.005 > . 12001:13001(1000) ack 1
diff --git a/gtests/net/tcp/timestamping/client-only-last-byte.pkt b/gtests/net/tcp/timestamping/client-only-last-byte.pkt
index d2f023c..d368314 100644
--- a/gtests/net/tcp/timestamping/client-only-last-byte.pkt
+++ b/gtests/net/tcp/timestamping/client-only-last-byte.pkt
@@ -22,7 +22,7 @@
 		    SOF_TIMESTAMPING_OPT_ID], 4) = 0
 
    +0	write(3, ..., 11000) = 11000
-   +0	> . 1:10001(10000) ack 1
+   +0	> P. 1:10001(10000) ack 1
  +.01	< . 1:1(0) ack 10001 win 4000
    +0	> P. 10001:11001(1000) ack 1
  +.01	< . 1:1(0) ack 11001 win 4000
-- 
2.11.0

