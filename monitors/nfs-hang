#!/bin/sh

. $LKP_SRC/lib/common.sh
. $LKP_SRC/lib/wait.sh
. $LKP_SRC/lib/job-init.sh
[ -f $LKP_SRC/lib/misc.sh ] &&
	. $LKP_SRC/lib/misc.sh 2>/dev/null

: ${NFS_HANG_DF_TIMEOUT:=600}
: ${NFS_HANG_CHECK_INTERVAL:=1800}

setup_wait

force_reboot()
{
	echo s > /proc/sysrq-trigger
	sleep 5
	echo b > /proc/sysrq-trigger
}

# caculate cpu utilization roughly without iowait time
cpu_utilization()
{
	local cpu_usage
	read cpu user_t nice_t system_t previdle_t rest < /proc/stat
	prevtotal_t=$((user_t+nice_t+system_t+previdle_t))
	sleep 10
	read cpu user_t nice_t system_t idle_t rest < /proc/stat
	total_t=$((user_t+nice_t+system_t+idle_t))
	cpu_usage=$((100*((total_t-prevtotal_t)-(idle_t-previdle_t))/(total_t-prevtotal_t)))
	echo $cpu_usage
}

nfs_hang()
{
	local loadavg
	local misc

	read loadavg misc < /proc/loadavg
	[ ${loadavg%.*} -ge $((3 * nr_cpu + 10)) ] && {
	# If loadavg is high, but cpu ulilization(without counting iowait time)
	# is low, it indicates many jobs are waiting for I/O(state D), may due
	# to nfs hang.
		[ $(cpu_utilization) -ge 5 ] && return 1
	}
	for i in $(seq 3); do
		timeout $NFS_HANG_DF_TIMEOUT df > /dev/null
		[ "$?" -eq 124 ] || return 1
	done

	# If ping failed -- possibly due to physical cable loose, network
	# switch crashed, LKP server down, etc. -- it probably won't help
	# to reboot (and keep rebooting).
	ping -c 5 -q $LKP_SERVER > /dev/null || return 1

	echo "nfs hang, loadavg: $loadavg, cpu utilization: $(cpu_utilization)%"
	return 0
}

nfs_hang_watchdog()
{
	while :
	do
		wait_timeout $NFS_HANG_CHECK_INTERVAL

		if nfs_hang; then
			set_job_state "nfs_hang"
			echo "NFS hang! Force reboot!" 1>&2
			force_reboot
		fi
	done
}

nfs_hang_watchdog
