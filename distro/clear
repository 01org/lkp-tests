#!/bin/bash

shopt -s nullglob

. $LKP_SRC/lib/install.sh
. $LKP_SRC/distro/common
. $LKP_SRC/lib/debug.sh

swupd_install_depends()
{
	local script
	local bm="$1"
	local scripts=$(find $LKP_SRC/distro/depends/ -name "$bm" -o -name "${bm}.[0-9]")

	for script in $scripts
	do
		script=$(basename $script)
		packages=$(get_dependency_packages $DISTRO $script)

		[ -z "$packages" ] && continue

		echo install packages for $script: $packages

		$LKP_SRC/distro/installer/clear $packages
	done
}

pack_benchmark()
{
	swupd_install_depends lkp-dev

	for BM_NAME in $benchmark
	do
		swupd_install_depends $BM_NAME-dev || continue
		echo $LKP_SRC/sbin/pack -d $DISTRO -f -c -s $PKG_MNT/$pack_to $BM_NAME
		(
			setup_proxy
			$LKP_SRC/sbin/pack -d $DISTRO -f -c -s $PKG_MNT/$pack_to $BM_NAME
		)
	done
}

install_runtime_depends()
{
	local scripts=
	local job=$1

	parse_yaml $job
	swupd_install_depends lkp

	for script in $scripts
	do
		swupd_install_depends $script
	done
}

fixup_preinstall()
{
	:
}

list_bundles_files()
{
	cp -a $(ls -t /var/lib/swupd/*/Manifest.$p | head -1) $tmpdir/

	while read a b c f
	do
		[ -n "$f" ] && echo $f >>$tmpdir/$p.list
	done <$tmpdir/Manifest.$p
}

pack_bundles_files()
{
	# allow empty
	ls $tmpdir | grep -q "\.list$" >/dev/null || {
		echo "empty PACKAGE_LIST for $BM_NAME"
		return 0
	}

	cat $tmpdir/*.list | sort | uniq |
		cpio --quiet -o -H newc --owner=root.root |
		gzip -n -9 >$pack_to/${BM_NAME}_$date.cgz || return

	ln -sf ${BM_NAME}_$date.cgz $pack_to/${BM_NAME}.cgz || return
	chown .lkp $pack_to/${BM_NAME}_$date.cgz $pack_to/${BM_NAME}.cgz || return

	echo package installed to $pack_to/${BM_NAME}.cgz
}

pack_benchmark_deps()
{
	local date=$(date +"%Y-%m-%d")

	for BM_NAME in $benchmark
	do
		local tmpdir=$(mktemp -d /tmp/pack-deps-$BM_NAME-XXXXXXXX)

		check_shared_package $BM_NAME
		packages=$(echo $(get_dependency_packages $DISTRO $BM_NAME))
		for p in $packages
		do
			swupd bundle-list | grep -qw "^$p$" && continue
			$LKP_SRC/distro/installer/clear $p 2>&1 | grep -v "Out of memory"

			list_bundles_files
		done

		pack_bundles_files || return
	done
}
