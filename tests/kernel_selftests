#!/bin/bash

## The kernel contains a set of "self tests" under the tools/testing/selftests/
## directory. These are intended to be small unit tests to exercise individual
## code paths in the kernel.
## See: https://www.kernel.org/doc/Documentation/kselftest.txt

. $LKP_SRC/lib/debug.sh

shopt -s nullglob

# linux-headers file is created by 0day system, and located in /usr/src/linux-headers-$kconfig-$commit directory.
linux_headers_dirs=(/usr/src/linux-headers*)

[[ $linux_headers_dirs ]] || die "failed to find linux-headers package"

linux_headers_dir=${linux_headers_dirs[-1]}
echo "KERNEL SELFTESTS: linux_headers_dir is $linux_headers_dir"

# linux-selftests file is created by 0day system, and located in /usr/src/linux-selftests-$kconfig-$commit directory.
linux_selftests_dir=(/usr/src/linux-selftests-*)
[[ $linux_selftests_dir ]] || die "failed to find linux-selftests dir"

# headers_install's default location is usr/include which is required by several tests' Makefile
mkdir -p "$linux_selftests_dir/usr/include" || die
mount --bind $linux_headers_dir/include $linux_selftests_dir/usr/include || die

cd $linux_selftests_dir/tools/testing/selftests || die

# workaround hugetlbfstest.c open_file() error
mkdir -p /hugepages

# has too many errors now
sed -i 's/hugetlbfstest//' vm/Makefile

# add mpx test as default
sed -i "s/TARGETS_C_BOTHBITS := /TARGETS_C_BOTHBITS := mpx-mini-test /" x86/Makefile

# temporarily workaround compile error on gcc-6
command -v gcc >/dev/null || ln -sf /usr/bin/gcc-5 /usr/bin/gcc

for mf in */Makefile; do
	subtest=${mf%/Makefile}

	grep -E -q -m 1 "^TARGETS \+?=  ?$subtest" Makefile || {
		echo "skip ${subtest} test: not be default compiling/testing target"
		continue
	}

	if [[ $subtest = "efivarfs" ]]; then
		[[ -d "/sys/firmware/efi" ]] || {
				echo "skip efivarfs test: /sys/firmware/efi dir does not exist"
				continue
		}

		grep -q -F -w efivarfs /proc/filesystems || modprobe efivarfs || {
			echo "skip efivarfs test: no efivarfs support, try enable CONFIG_EFIVAR_FS"
			continue
		}

		mount -t efivarfs efivarfs /sys/firmware/efi/efivars
	fi

	echo
	log_cmd make run_tests -C $subtest  2>&1
done
