#!/bin/sh
# - dpdk_commit
# - dpdk_chase_branch
# - dpdk_compiler

## DPDK is a set of libraries and drivers for fast packet processing.
## It was designed to run on any processors knowing Intel x86 has
## been the first CPU to be supported. Ports for other CPUs like
## IBM Power 8 are under progress. It runs mostly in Linux userland.
## A FreeBSD port is now available for a subset of DPDK features.

WORKSPACE=/tmp
COMMIT=$dpdk_commit
DPDK_ChaseBranch=$dpdk_chase_branch
OS="`cat /etc/issue | sed -n '1p' | tr ' ' '_'`"
BUILDDIR="${OS}-build"
COMPILER=$dpdk_compiler

echo "Update Local code"
git clone git://gitmirror/dpdk $WORKSPACE/DPDK

export ICP_ROOT=$WORKSPACE
cd $ICP_ROOT/DPDK/
git checkout $COMMIT

KernelVersion="`uname -r | sed 's/\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\)-\([0-9]*\)\(.*\)/\1\.\2\.\3-\4/g'`"
GCCVersion="`gcc --version | head -n 1 | grep -i '^gcc' | sed 's/[^0-9]*\([0-9]*\)\.\([0-9]*\)\.\([0-9]*\).*/\1\.\2\.\3/g'`"

OS_INFO="{[KERNEL: ${KernelVersion}],[GCC: ${GCCVersion}]}"

ChaseBranch=$DPDK_ChaseBranch

export TARGET_ROOT="/tmp/DPDK_Builds/${ChaseBranch}/$BUILDDIR/${OS}_${COMMIT}"

mkdir -p $TARGET_ROOT
chmod -R 777 /tmp/DPDK_Builds/${ChaseBranch}

default_gcc_target=x86_64-native-linuxapp-gcc
feature_gcc_target=x86_64-ivshmem-linuxapp-gcc

change_configs()
{
	local common_config="config/common_linuxapp"
	local lines=$(awk -F= '!x[$1]++' "$@" "$common_config")
	echo "$lines" > "$common_config"
}

gcc_build()
{
	local configs_dir="$LKP_SRC/etc/dpdk-configs"

	# build default gcc
	echo ">>>Build Default<<<"
	# sed -i 's/^CONFIG_RTE_LIBRTE_PMD_PCAP=.*$/CONFIG_RTE_LIBRTE_PMD_PCAP=n/g' config/defconfig_x86_64-native-linuxapp-gcc
	# sed -i 's/^CONFIG_RTE_NIC_BYPASS=.*$/CONFIG_RTE_NIC_BYPASS=n/g' config/defconfig_x86_64-native-linuxapp-gcc

	change_configs "$configs_dir/dpdk-rte-configs-n"

	gmake install T=$default_gcc_target 2>&1 | tee /tmp/null

	echo ""

	# build features gcc
	echo ">>>Build Features<<<"

	# ivshmem
	echo "${OS_INFO}" | tee ${TARGET_ROOT}/build_ivshmem.log
	echo ">>>$feature_gcc_target<<<" | tee -a ${TARGET_ROOT}/build_ivshmem.log
	gmake install T=$feature_gcc_target 2>&1   | tee -a ${TARGET_ROOT}/build_ivshmem.log

	change_configs "$configs_dir/dpdk-rte-configs-y"

	echo "${OS_INFO}" | tee ${TARGET_ROOT}/build_configuration_modification.log
	echo ">>>$default_gcc_target%CONFIG_RTE_LIBRTE_PMD_PCAP=y@CONFIG_RTE_NIC_BYPASS=y@CONFIG_RTE_BUILD_SHARED_LIB=y<<<" | tee -a ${TARGET_ROOT}/build_configuration_modification.log
	gmake install T=$default_gcc_target 2>&1 | tee -a ${TARGET_ROOT}/build_configuration_modification.log

	change_configs "$configs_dir/dpdk-debug-configs-y"

	echo ">>>$default_gcc_target%enable all DEBUG OPTION :y<<<" | tee -a ${TARGET_ROOT}/build_configuration_modification.log
	gmake install T=$default_gcc_target 2>&1 | tee -a ${TARGET_ROOT}/build_configuration_modification.log
}

case $COMPILER in
	gcc)
		export RTE_KERNELDIR=/usr/src/kernels/3.19.5-100.fc20.x86_64/
		gcc_build
		;;
	*)
		echo "WRONG compiler specified!!!"
		exit 1
		;;
esac

# mv results to LKP server result directory
mkdir -p $RESULT_ROOT/build_result
mv /tmp/DPDK_Builds/${ChaseBranch} $RESULT_ROOT/build_result
cd $WORKSPACE/DPDK/
[ -d $default_gcc_target ] && mv $default_gcc_target $RESULT_ROOT/build_result
[ -d $feature_gcc_target ] && mv $feature_gcc_target $RESULT_ROOT/build_result
