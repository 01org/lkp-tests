#!/bin/bash
# - group

export PATH=$BENCHMARK_ROOT/piglit/bin:$PATH
export DISPLAY=:0

dri_exist()
{
	[[ -d /sys/kernel/debug/dri ]]
}

check_wait_dri()
{
	dri_exist && return

	mountpoint /sys/kernel/debug ||
	mount -t debugfs debugfs /sys/kernel/debug || exit

	dri_exist && return

	modprobe drm

	for i in {1..9}
	do
		sleep $i
		dri_exist && return
	done

	dri_exist && return

	echo "No /sys/kernel/debug/dri" >&2
}

check_wait_dri

cat > piglit.conf <<EOF
[igt]
path=$BENCHMARK_ROOT/piglit/lib/piglit/bin/igt
EOF

tset=${group%%-*}
groups_dir=$BENCHMARK_ROOT/piglit/groups
[[ -d $groups_dir ]] || groups_dir=$LKP_SRC/pack/piglit-addon/groups
[[ -f $groups_dir/$tset-all ]] || cat $groups_dir/$tset-[0-9][0-9][0-9] > $groups_dir/$tset-all

testcases=()
while read testcase
do
	testcases+=( "$testcase" )
done <<< "$(grep -F -x -f $groups_dir/$tset-all $groups_dir/$group)"

mkdir $RESULT_ROOT/results
i=0
for testcase in "${testcases[@]}"
do
	start_time=$(date +%s)
	cmd piglit run $tset -t "$testcase" $TMP/piglit-results-$i
	end_time=$(date +%s)
	echo "${testcase// /_}".seconds: $(( end_time - start_time ))
	cmd piglit summary console $TMP/piglit-results-$i
	cp $TMP/piglit-results-$i/results.json $RESULT_ROOT/results/${i}.json
	(( i++ ))
done
