#!/bin/sh
# - test
# - data_size
# - n_client
# - requests
# - n_pipeline
# - key_len
# - nr_task
# - cpu_node_bind

## Redis is an open source (BSD licensed), in-memory data structure store,
## used as a database, cache and message broker. It supports data structures
## such as strings, hashes, lists, sets, sorted sets with range queries,
## bitmaps, hyperloglogs, geospatial indexes with radius queries and streams.
## Redis includes the redis-benchmark utility that simulates running commands
## done by N clients at the same time sending M total queries (it is similar
## to the Apache's ab utility)

. $LKP_SRC/lib/reproduce-log.sh
export PATH=$BENCHMARK_ROOT/redis/bin:$PATH
redis_dir=$TMP/redis/
rm -rf $redis_dir
mkdir -p $redis_dir
for i in $(seq 1 "${nr_task}")
do
	port=$((6379+$i))

	if [ -n "$cpu_node_bind" ]; then
		if [ "$cpu_node_bind" = "even" ]; then
			bind=$(($i%2))
		else
			bind=$cpu_node_bind
		fi
		numa_bind="numactl --cpunodebind=$bind --"
	fi
	log_test $numa_bind redis-benchmark -t $test -d $data_size -c $n_client -n $requests -P $n_pipeline -r $key_len -p $port > $redis_dir/redis.$i &
done

wait

cat $redis_dir/redis.*
