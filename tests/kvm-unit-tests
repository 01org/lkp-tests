#!/bin/sh

## Tests for x86 architecture are run as kernel images for qemu
## that supports multiboot format. Tests uses an infrastructure
## called from the bios code. The infrastructure initialize the
## system/cpu's, switch to long-mode and calls the 'main' function
## of the individual test. Tests uses a qemu's virtual test device,
## named testdev, for services like printing, exiting, query memory size etc.

. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/upload.sh
. $LKP_SRC/lib/log.sh

casesfile="x86/unittests.cfg"

# if we pass 'hyperv_synic' to this function, line 7 - 12 will be deleted
#
# ~/lkp/kvm-unit-tests$ cat unittests.cfg -n
#  1 [vmx_null]
#  2 file = vmx.flat
#  3 extra_params = -cpu host,+vmx -append null
#  4 arch = x86_64
#  5 groups = vmx
#  6
#  7 [hyperv_synic]
#  8 file = hyperv_synic.flat
#  9 smp = 2
# 10 extra_params = -cpu kvm64,hv_synic -device hyperv-testdev
# 11 groups = hyperv
# 12
# 13 [hyperv_connections]
# 14 ...
remove_case()
{
	local to_be_removed=$1

	sl=$(grep "^\[$to_be_removed\]" $casesfile -n | awk -F':' '{print $1}')
	[ -n "$sl" ] || return
	el=$(sed -n "$((sl+1)),$ p" $casesfile | grep '^\[' -n -m 1 | awk -F':' '{print $1}')

	if [ -z "$el" ]; then
		sed -i "$sl,$ d" $casesfile # delete $sl to the end
	else
		el=$((el+sl-1))
		sed -i "$sl,$el d" $casesfile # delete $sl to $el
	fi
}

check_ignored_cases()
{
	local ignored_by_lkp=$LKP_SRC/pack/"$testcase"-addon/ignored_by_lkp

	[ -f "$ignored_by_lkp" ] || return

	for ignore in $(cat $ignored_by_lkp | grep -v '^#')
	do
		remove_case "$ignore" && echo "ignored_by_lkp: $ignore"
	done
}

load_kvm_intel_nested()
{
	[ -c "/dev/kvm" ] || {
		modprobe kvm_intel nested=y || {
			log_error "fail to load kvm_intel with nested=y"
			return 1
		}
	}

	# if nested != 'Y', reload it again
	local nested=$(cat /sys/module/kvm_intel/parameters/nested)

	[ "$nested" = "N" ] && {
		# force load kvm_intel with nested=y
		modprobe -r kvm_intel
		modprobe kvm_intel nested=y || {
			log_error "fail to reload kvm_intel with nested=y"
			return 1
		}
	}

	nested=$(cat /sys/module/kvm_intel/parameters/nested)
	[ "$nested" = "N" ] && log_error "FIXME: vmx related cases may fail due to host unsupport nested virtualization" && return 1

	return 0
}

setup_test_environment()
{
	# fix "SKIP pmu (/proc/sys/kernel/nmi_watchdog not equal to 0)"
	echo 0 > /proc/sys/kernel/nmi_watchdog || return
	load_kvm_intel_nested || return
}

cd $BENCHMARK_ROOT/kvm-unit-tests || exit

# Debian/Fedora/Ubuntu use /usr/bin/qemu-system-x86_64 as QEMU Emulator.
# RHEL use /usr/libexec/qemu-kvm as QEMU Emulator.

if qemu-system-x86_64 --help >/dev/null 2>&1; then
	export QEMU="$(which qemu-system-x86_64)"
else
	if [ -f "/usr/libexec/qemu-kvm" ]; then
		export QEMU="/usr/libexec/qemu-kvm"
	else
		echo "Can not find QEMU Emulator" >&2
		exit 1
	fi
fi

setup_test_environment || die "failed to setup test environment"

check_ignored_cases

log_cmd ./run_tests.sh || {
	exit_code=$?

	# dump debug info
	ldd $QEMU
	lsmod
	exit $exit_code
}

exit_value=$?

upload_files -t results $BENCHMARK_ROOT/kvm-unit-tests/logs/*

exit $exit_value
