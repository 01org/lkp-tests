#!/bin/sh

## Tests for x86 architecture are run as kernel images for qemu
## that supports multiboot format. Tests uses an infrastructure
## called from the bios code. The infrastructure initialize the
## system/cpu's, switch to long-mode and calls the 'main' function
## of the individual test. Tests uses a qemu's virtual test device,
## named testdev, for services like printing, exiting, query memory size etc.

. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/upload.sh

setup_test_environment()
{
	# fix "SKIP pmu (/proc/sys/kernel/nmi_watchdog not equal to 0)"
	echo 0 > /proc/sys/kernel/nmi_watchdog
}

cd $BENCHMARK_ROOT/kvm-unit-tests || exit

[ -c '/dev/kvm' ] || {
	modprobe kvm_intel || die "failed to insert kvm_intel module"
}

# Debian/Fedora/Ubuntu use /usr/bin/qemu-system-x86_64 as QEMU Emulator.
# RHEL use /usr/libexec/qemu-kvm as QEMU Emulator.

if qemu-system-x86_64 --help >/dev/null 2>&1; then
	export QEMU="$(which qemu-system-x86_64)"
else
	if [ -f "/usr/libexec/qemu-kvm" ]; then
		export QEMU="/usr/libexec/qemu-kvm"
	else
		echo "Can not find QEMU Emulator" >&2
		exit 1
	fi
fi

setup_test_environment || die "failed to setup test environment"

log_cmd ./run_tests.sh || {
	exit_code=$?

	# dump debug info
	ldd $QEMU
	lsmod
	exit $exit_code
}

exit_value=$?

upload_files -t results $BENCHMARK_ROOT/kvm-unit-tests/logs/*

exit $exit_value
