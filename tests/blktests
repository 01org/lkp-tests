#!/bin/sh
# - test

## blktests is a test framework for the Linux kernel block layer and storage stack.

. $LKP_SRC/lib/job.sh
. $LKP_SRC/lib/debug.sh
. $LKP_SRC/lib/upload.sh
. $LKP_SRC/lib/reproduce-log.sh

[ -z "$nr_partitions" -o "$nr_partitions" -lt 1 ] && die "no disk partitions found, nr_partitions is 0"
cd $BENCHMARK_ROOT/blktests || die "fail to cd $BENCHMARK_ROOT/blktests"

set_env()
{
	echo "TEST_DEVS=${partitions%% *}" > config
}

ignore_and_do_tests()
{
	local all_tests_cmd="$1"

	[ "$2" ] && cat $2 2>/dev/null | sort | uniq > merged_ignored_files

	[ -s "merged_ignored_files" ] && {
		ignored_tests_cmd=${all_tests_cmd}" | grep -F -f merged_ignored_files"
		all_tests_cmd=${all_tests_cmd}" | grep -v -F -f merged_ignored_files"

		log_eval $ignored_tests_cmd
		for ignored_test in $(eval $ignored_tests_cmd)
		do
			echo "$ignored_test [ignored by lkp]"
		done
	}
	log_eval $all_tests_cmd
	log_cmd ./check $(eval $all_tests_cmd)
}

run_test()
{
	local test_dir="$LKP_SRC/pack/blktests-addon/tests"
	local test_ignore="$test_dir/${test%-*}-ignore"

	if [ "${test%[a-z4]-[0-9][0-9][0-9]}" != "$test" ]; then # single test
		all_tests_cmd="echo ${test%-*}/${test#*-}"
		ignore_and_do_tests "$all_tests_cmd"
	elif [ "${test#*-}" != "$test" ]; then # group tests
		all_tests_cmd="sed \"s:^:${test%-*}/:\" $test_dir/$test"
		ignore_and_do_tests "$all_tests_cmd" "$test_ignore"
	else
		ignore_and_do_tests "$test"
	fi
}

read_env_vars
set_env
run_test
exit_value=$?

upload_files -t results $BENCHMARK_ROOT/blktests/results/*
exit $exit_value
