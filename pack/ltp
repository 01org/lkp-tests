#!/bin/bash

download()
{
	git_clone_update https://git.centos.org/r/rpms/rusers.git
	git_clone_update https://github.com/ianw/numactl.git
	git_clone_update https://github.com/linux-test-project/ltp.git
}

split_syscalls()
{
	local cmdfile="runtest/syscalls"
	[ -f "$cmdfile" ] || return 0
	# syscalls_partN file exists, abort splitting
	[ -f "${cmdfile}_part1" ] && return 0

	i=1
	n=1
	cat $cmdfile | sed -e '/^$/ d' -e 's/^[ ,\t]*//' -e '/^#/ d' | while read line
	do
		if [ $n -gt 300 ];then
			i=$(($i+1))
			n=1
		fi
		echo "$line" >> "runtest/syscalls_part${i}"
		n=$(($n+1))
	done

	echo "Splitting syscalls to syscalls_part1, ..., syscalls_part$i"
}

patch_source()
{
	local patch=$LKP_SRC/pack/$1
	[[ -f $patch ]] || return 0
	patch -p1 < $patch
}

build_rusers()
{
	local branch=$(git branch -a | grep /c | tail -1 | awk -F/ '{print $NF}')
	git checkout "$branch" || return

	local version=$(grep ^Version: SPECS/rusers.spec | awk '{print $2}')
	export version=$version

	local source=$(grep ^Source: SPECS/rusers.spec | awk '{print $2}')
	local url=$(echo $source | sed s/"%{version}"/${version}/g)
	curl -k "$url" -o netkit-rusers.tar.gz

	tar zxf netkit-rusers.tar.gz

	for p in $(grep ^Patch SPECS/rusers.spec | awk '{print $2}')
	do
		echo "Patching $p ..."
		patch -f -p0 < SOURCES/$p
	done

	cd netkit-rusers-$version
	./configure --prefix=$BM_ROOT/netkit-rusers
	cd rup
	make || return
	cd ../../
}

build_ltp()
{
	patch_source ltp.patch
	split_syscalls
	make autotools
	./configure --prefix=$BM_ROOT
	make
}

build_numactl()
{
	autoreconf
	./configure --prefix=$BM_ROOT/testcases/bin/numactl
	make
}

install_rusers()
{
	mkdir -p $BM_ROOT/netkit-rusers/{bin,man/man1}
	cd netkit-rusers-$version/rup
	make install 2> /dev/null
}

install_ltp()
{
	make install
	grep -v -w -f $LKP_SRC/pack/ltp-black-list \
	runtest/syscalls > $BM_ROOT/runtest/syscalls
}

install_numactl()
{
	make install
	ln -sf $BM_ROOT/testcases/bin/numactl/bin/numademo $BM_ROOT/testcases/bin/numademo
	ln -sf $BM_ROOT/testcases/bin/numactl/bin/memhog $BM_ROOT/testcases/bin/memhog
}

build()
{
	build_ltp || exit

	cd ../numactl || exit
	build_numactl || exit

	cd ../rusers || exit
	build_rusers || exit
}

install()
{
	cd ../ltp || exit
	install_ltp || exit

	cd ../numactl || exit
	install_numactl || exit

	cd ../rusers || exit
	install_rusers || exit
}

strip_object_files()
{
	:
}
