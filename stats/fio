#!/usr/bin/env ruby

LKP_SRC = ENV['LKP_SRC'] || File.dirname(File.dirname(File.realpath($PROGRAM_NAME)))

require 'json'
require "#{LKP_SRC}/lib/log"

OPS = ['read', 'write']
PERCENTILES = ['90.000000', '95.000000', '99.000000']

def parse
  fn = File.join ENV['RESULT_ROOT'], 'fio.output'
  unless File.exist?(fn)
    log_error "log file #{fn} does not exist"
    return
  end
  contents = File.read(fn)
  idx = contents.index('{')
  unless idx
    log_error "#{fn}: maybe it is not a json format file"
    return
  end
  contents = contents[idx..-1] # contents should start with '{'
  res = JSON.parse(contents)
  unless res
    log_error 'Invalid/empty fio output'
    return
  end
  res_job = res['jobs'].first
  OPS.each { |ops|
    res = res_job[ops]
    puts "#{ops}_bw_MBps: #{res['bw'].to_f / 1024}"
    puts "#{ops}_iops: #{res['iops']}"
    res_clat = res['clat']
    res_clat_percentiles = res_clat['percentile']
    puts "#{ops}_clat_mean_us: #{res_clat['mean']}"
    puts "#{ops}_clat_stddev: #{res_clat['stddev']}"
    PERCENTILES.each { |p|
      sp = p.chomp('0')
      while sp.chomp!('0')
        true
      end
      sp.chomp!('.')
      puts "#{ops}_clat_#{sp}%_us: #{res_clat_percentiles[p]}"
    }
    res_slat = res['slat']
    puts "#{ops}_slat_mean_us: #{res_slat['mean']}"
    puts "#{ops}_slat_stddev: #{res_slat['stddev']}"
  }
  res_latency_us = res_job['latency_us']
  res_latency_us.each { |k, v|
    puts "latency_#{k}us%: #{v}"
  }
  res_latency_ms = res_job['latency_ms']
  res_latency_ms.each { |k, v|
    puts "latency_#{k}ms%: #{v}"
  }
end

parse
