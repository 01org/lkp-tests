#!/usr/bin/env ruby

require ENV['LKP_SRC'] + '/lib/statistics.rb'
require ENV['LKP_SRC'] + '/lib/string_ext'
require 'set'

stats = []
testname = ''
mqueue_speed = {}
nr_test = 0

while (line = STDIN.gets)
  line = line.remediate_invalid_byte_sequence(replace: '_') unless line.valid_encoding?

	case line
	when %r{make: Entering directory .*/(.*)'}
		testname = Regexp.last_match[1]
	when /^selftests: (.*) .*(PASS|FAIL)/
		stats << "#{testname}_#{Regexp.last_match[1]}.#{Regexp.last_match[2].downcase}: 1"
	when /Test #([1-9].*):/
		mqueue_test = Regexp.last_match[1]
	when /(Send|Recv) msg:/
		io = Regexp.last_match[1]
	when %r{(\d+) nsec/msg/}
		item = Regexp.last_match[1]
		mqueue_speed[mqueue_test + '.' + io] = item.to_i
	when /^Makefile:[\s\S]+failed$/
		stats << 'x86_make.fail: 1'
	end
end

if !mqueue_speed.empty?
	puts "mqueue.nsec_per_msg: #{mqueue_speed.values.average.to_i}"
	nr_test = stats.uniq.size + 1
else
	nr_test = stats.uniq.size
end

stats.uniq.each { |stat| puts stat }
puts "total_test: #{nr_test}"
