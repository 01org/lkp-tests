#!/usr/bin/env ruby

LKP_SRC = ENV['LKP_SRC'] || File.dirname(File.dirname(File.realpath($PROGRAM_NAME)))

require "#{LKP_SRC}/lib/string_ext"
require "#{LKP_SRC}/lib/log"

stats = {}
while (line = STDIN.gets)
  line = line.resolve_invalid_bytes

  case line
  when /^[ ]+\+ tests\/(\S+)$/
    #   + tests/utils/check_paranoid
    #  + tests/sysfs/events
    testcase = $1.downcase
  when /\.\.\.\s+(.+)$/
    #     Testing \"branch-misses\" generalized event...               PASSED
    #     Testing PERF_FLAG_FD_OUTPUT flag...                        KNOWN KERNEL BUG
    if stats[testcase]
      log_warn "testcase #{testcase} has already existed"
      exit 1
    end

    stats[testcase] = $1.strip.to_s.tr(' ', '_').downcase
  when /^(ignored_by_lkp)\s+(.*)\s+/
    stats[$2] = $1
  end
end

result_mapping = {
  'passed' => 'pass',
  'failed' => 'fail'
}

stats.each do |k, v|
  v = result_mapping[v] || v

  puts k + '.' + v + ': 1'
end
