#!/usr/bin/env ruby

require 'time'

# Linux 4.4.0-83-generic (wu-Studio-Slim-540s)    2017-08-23      _x86_64_        (2 CPU)

# 16:51:28     CPU    %usr   %nice    %sys %iowait    %irq   %soft  %steal  %guest  %gnice   %idle
# 16:51:29     all    1.51    0.00   51.26    0.00    0.00    0.00    0.00    0.00    0.00   47.24
# 16:51:29       0    0.00    0.00  100.00    0.00    0.00    0.00    0.00    0.00    0.00    0.00
# 16:51:29       1    3.03    0.00    1.01    0.00    0.00    0.00    0.00    0.00    0.00   95.96

keys = %w(time cpu.usr% cpu.nice% cpu.sys% cpu.iowait% cpu.irq% cpu.soft% cpu.steal% cpu.guest% cpu.gnice% cpu.idle%)
keys_max = %w(cpu.usr.max% cpu.nice.max% cpu.sys.max% cpu.iowait.max% cpu.irq.max% cpu.soft.max% cpu.steal.max% cpu.guest.max% cpu.gnice.max% cpu.idle.max%)

def show_record(keys, data)
  data.each_with_index { |v, i| puts "#{keys[i]}: #{v}" }
end

def parse_time(date, line)
  data = line.split
  if line =~ / (AM|PM) /
    time = Time.parse([date, data[0], data[1]].join(' ')).to_i
    data.delete_at(1)
  else
    time = Time.parse([date, data[0]].join(' ')).to_i
  end
  data[0] = data[1]
  data[1] = time
  data
end

first_line = STDIN.gets

date = first_line.split[3]
date = /\d+-\d+-\d+/.match(date)
exit 1 if date.nil?

max_usage = 0
max_record = nil

STDIN.each_line do |line|
  if line =~ /Average: / && max_record
    show_record keys_max, max_record
    max_record = nil
    break
  end
  next unless line =~ /^\d+:\d+:\d+ +(AM|PM)? +(all|\d+) /
  data = parse_time(date, line)
  if data[0] == 'all'
    if max_record
      show_record keys_max, max_record
      max_usage = 0
      max_record = nil
    end
    show_record keys, data.drop(1)
  else
    usage = data[2].to_f + data[4].to_f
    if usage > max_usage
      max_usage = usage
      max_record = data.drop(2)
    end
  end
end

show_record keys_max, max_record if max_record
