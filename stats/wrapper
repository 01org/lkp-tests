#!/bin/bash

set -o pipefail

program=$1
program_dir=$(dirname $0)
log=$RESULT_ROOT/$program

check_incomplete_run()
{
	local file=$1

	[[ -s $file ]] && return
	[[ -f $LKP_SRC/tests/$program ]] || return

	echo "is_incomplete_run: 1" >> $RESULT_ROOT/last_state
}

[ -f $log.gz ] && zcat $log.gz > $log

check_incomplete_run $log

[[ -s $log ]] ||
[[ $program = 'tcrypt' ]] ||
[[ $program = 'kernel-size' ]] ||
[[ $program = 'perf-profile' ]] ||
[[ $program = 'kmsg' ]] ||
[[ $program = 'dmesg' && -s $RESULT_ROOT/.dmesg ]] || {
	rm -f $log $log.gz
	exit 0
}

tmpfile=$(mktemp --tmpdir=/dev/shm lkp-stats.XXXXXXXX)
if [[ -f $log ]]; then
	$program_dir/$program $log < $log > $tmpfile || { echo "$program_dir/$program $log < $log  exit code $?, check $tmpfile" >&2; exit 1; }
else
	$program_dir/$program < /dev/null > $tmpfile || { echo "$program_dir/$program < /dev/null  exit code $?, check $tmpfile" >&2; exit 1; }
fi

[[ $testbox =~ ^vm- ]] ||
[[ $program = 'dmesg' ]] ||
[[ -s $tmpfile ]] ||
[[ ! -s $RESULT_ROOT/time ]] ||
{ [[ $program = 'turbostat' ]] && grep -q -e 'No invariant TSC' $log; } ||
grep -q "^$program\." $LKP_SRC/etc/failure ||
echo "WARN: empty stats for $log" >&2

grep -q "^$program\." $LKP_SRC/etc/failure ||
check_incomplete_run $tmpfile

$LKP_SRC/sbin/dump-stat $program	< $tmpfile || { echo "$LKP_SRC/sbin/dump-stat $program  exit code $?, check $tmpfile" >&2; exit 1; }
rm $tmpfile

[ -f $log.gz ] && rm $log

exit 0
